from aiogram import F, types, Router, Bot
from aiogram.filters import CommandStart, Command, or_f
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery

from filter.filter import ChatTypeFilter, check_message, IsSuperAdmin
from sqlalchemy.ext.asyncio import AsyncSession
from database.orm_query import  orm_add_user
from handlers.menu2 import help_, get_main_menu_kb

from data.text import  welcome


user_private_router = Router()
user_private_router.message.filter(ChatTypeFilter(["private"]))


@user_private_router.message(CommandStart())
async def start_cmd(message: types.Message, session: AsyncSession):
    # –¥–æ–±–∞–≤–ª—è–µ–º —é–∑–µ—Ä–∞ –≤ –±–∞–∑—É
    await orm_add_user(
        session,
        user_id=message.from_user.id,
        username=message.from_user.username,
        first_name=message.from_user.first_name,
        last_name=message.from_user.last_name
    )

    policy_keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω",
                    callback_data="agree_policy"
                )
            ]
        ]
    )
    await message.answer(f"{welcome}", reply_markup=policy_keyboard, parse_mode="HTML")


welcome_text = (
    f'–ü—Ä–∏–≤–µ—Ç! –ù–∞ —Å–≤—è–∑–∏ —è, —Ç–≤–æ—è ¬´–Ø—É–∑–∞¬ª üíù'
    f'\n–Ø-—ç—Ç–æ –ø—É—Ç—å. –í–æ –º–Ω–µ –≤—Å—ë –¥–≤–∏–∂–µ–Ω–∏–µ –º–∏—Ä–∞!'
    f'\n–ó–¥–µ—Å—å, –º—ã –≤–º–µ—Å—Ç–µ –æ–∫—É–Ω—ë–º—Å—è –≤ –≤–æ–¥–æ–≤–æ—Ä–æ—Ç —Å–æ–±—ã—Ç–∏–π –∏ –≥–ª—É–±–æ–∫–∏—Ö —á—É–≤—Å—Ç–≤, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –Ω–æ–≤–æ–µ-–≤ –º–∏—Ä–µ –∏ –≤ —Å–µ–±–µ.'
    f'–ë—É–¥—å —Å–æ –º–Ω–æ–π –≤ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–º¬†–ø–æ—Ç–æ–∫–µ!'
)


@user_private_router.callback_query(F.data == "agree_policy")
async def process_agree(callback: CallbackQuery, session: AsyncSession):
    await callback.answer("–°–ø–∞—Å–∏–±–æ, –≤—ã —Å–æ–≥–ª–∞—Å–∏–ª–∏—Å—å ‚úÖ", show_alert=False)
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–µ –º–µ–Ω—é
    # await help_(callback)
    await callback.message.edit_text(welcome_text, get_main_menu_kb(callback.from_user))

@user_private_router.message(or_f(Command('check_admin'), lambda msg: msg.text == "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–¥–º–∏–Ω–∞"))
async def if_admin(message: types.Message):
    await message.answer(f'–í–∞—à id:\t{message.from_user.id}')
    if  check_message(message):
        await message.answer('‚úÖ–í—ã –∞–¥–º–∏–Ω')
    else:
         await message.answer(f'‚ùå–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏–º—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
